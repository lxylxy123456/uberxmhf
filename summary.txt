Porting XMHF to amd64
	Port C headers
	Difference between assembly instructions
		pusha (before bug_001)
	Difference between pointer size
		(bug_006)
		Stack space required *= about 2, or stack overflow (bug_013)
		scode.c (bug_017)
		Do not simply cast to u32 (bug_022)
		TrustVisor (bug_026)
	Difference between hardware data structures
		gdt, idt, page table, TSS
		segment base = 0 -> restructure SL
		Need to walk page long mode page table (bug_012)
		TR access right: 3 or 11 -> 11 only (bug_014)
		Need to support more than 4G physical memory in EPT (bug_020)
		More GPRs (bug_034)
	New states to be managed
		EFER.LME (bug_001)
		"IA-32e mode guest" (bug_009)
		guest_GS_base (bug_010)
		CS.L (bug_026)
	Different calling conventions
		-mno-red-zone (bug_018)

Support modern OS
	Debian 11 uses INVPCID (bug_002) (guest crash) (could have cleared CPUID)
	Debian 11 uses RDTSCP (bug_003) (guest crash) (could have cleared CPUID)
	Debian 11 needs exception when RDMSR fails (bug_004) (hypervisor crash) (unimplemented feature)
	Debian 11 sets CR0 reserved fields (bug_008) (hypervisor crash) (not follow SDM)
	Debian 11 reads special MSR (bug_009) (guest crash) (not follow SDM)
	Debian 11 uses x2APIC (bug_011) (guest crash) (could have cleared CPUID)
	Debian 11 uses CR3 PCID, should ignore lower bits in trustvisor (bug_017) (trustvisor crash) (now follow SDM, ignored bits not ignored)
	Windows XP uses PAE, but triple fault due to incorrect CR4 (bug_027) (guest crash) (not follow SDM)
	PAE in general needs to update guest_PDPTE{0..3} (bug_028, bug_033) (guest crash) (not follow SDM)
	Windows XP uses VMCALL (bug_029) (hypervisor crash) (not fixable easily)

Support modern hardware
	TODO

Existing bugs
	NMI
		Race condition in quiesce code (bug_018) (hypervisor stuck)
		TrustVisor does not mask NMIs in PAL (bug_021)
		Need to hold printf lock (all possible locks) before quiesce (bug_024)
	Other
		Incorrectly simulate E820 to guest (bug_019) (guest see less memory)
		Incorrect logic when UP (bug_032) (cannot boot computer with 1 CPU)
		Guest AP entry state should follow SDM (bug_033) (impact unknown)

Bugs in other software
	QEMU Assertion `ret < cpu->num_ases && ret >= 0' (bug_031)
	KVM does not handle SMM correctly (bug_031)

TODO: continue at bug_036
